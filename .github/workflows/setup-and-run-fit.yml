name: Run FIT Tests
run-name: ${{ github.actor }} Running FIT tests on cbdinoclusters
on: [push]
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Maven Central Repository
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
      - name: Setup SSH
        uses: MrSquaare/ssh-setup-action@v1
        with:
            host: github.com
            private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: setup couchbase jvm client 
        run: |
          git clone git@github.com:couchbase/couchbase-jvm-clients.git
          cd couchbase-jvm-clients
          # make
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: setup fit 
        run: |
          git clone git@github.com:couchbaselabs/transactions-fit-performer.git
          cd transactions-fit-performer
          # docker build --no-cache -f test-driver/Dockerfile -t fit/test-driver:latest .
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      # - name: setup jenkins sdk
      #   run: |
      #     git clone git@github.com:couchbaselabs/jenkins-sdk.git
      #     cd jenkins-sdk
      #   env:
      #     SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      - name: create FIT network
        run: |
          docker network create fit  
      # - name: start java performer
      #   run: |
      #     cd jenkins-sdk
      #     ./gradlew buildPerformer --args="-d ../ -i java-performer -s java-sdk"
      #     cd ..
      #     cd couchbase-jvm-clients
      #     docker run --network=fit -dit --rm --expose 8060 java-performer
      - name: Edit values from the FITConfiguration.json
        run: |
          cd transactions-fit-performer/test-driver
          # echo "`jq '.excludeTests=${{ env.EXCLUDETESTS}}' FITConfiguration.example.json`" > FITConfiguration.json
          # echo "`jq '.situational.capella.url=${{ env.URL }}' FITConfiguration.example.json`" > FITConfiguration.json
          # echo "`jq '.excludeTests="saurabh"' FITConfiguration.example.json`" > FITConfiguration.json
          # export URL=${{ env.URL }}
          echo ${{ vars.URL }}
          echo "`jq --arg e "${{ vars.URL }}" '.situational.capella.url=$e' FITConfiguration.example.json`" > FITConfiguration.json
          # echo "`jq '.excludeTests=[]' FITConfiguration.json`" > FITConfiguration.json
          # echo "`jq '.situational.capella.accessKey="esxjfT2VR1hVXAEgafBI5uob3jNgr9Ca"' FITConfiguration.json`" > FITConfiguration.json
          # echo "`jq '.situational.capella.privateKey="sX!g!XILDBgZYpKuCe23@qIsBU5scDMkD!HW%lfifgzlj82MauSkrhKT@wf%qXBA"' FITConfiguration.json`" > FITConfiguration.json
          # echo "`jq '.situational.capella.projectId="538ff549-bf26-4f6b-b047-df705ac4d18d"' FITConfiguration.json`" > FITConfiguration.json
          # echo "`jq '.situational.capella.tenantId="6af08c0a-8cab-4c1c-b257-b521575c16d0"' FITConfiguration.json`" > FITConfiguration.json
          # echo "`jq '.situational.capella.username="saurabh.mishra@couchbase.com"' FITConfiguration.json`" > FITConfiguration.json
          # echo "`jq '.situational.capella.password="Saurabh16@"' FITConfiguration.json`" > FITConfiguration.json
          # echo "`jq '.situational.capella.overrideToken="Saurabh16@"' FITConfiguration.json`" > FITConfiguration.json
          # echo "`jq '.situational.capella.cloudProvider="AWS"' FITConfiguration.json`" > FITConfiguration.json
          # echo "`jq '.situational.capella.region="us-east-1a"' FITConfiguration.json`" > FITConfiguration.json
          cat FITConfiguration.json
      # - name: Run FIT tests
      #   run: |
      #     cd transactions-fit-performer
      #     cd gRPC/jvm
      #     rm -rf src
      #     rm -rf target
      #     cd ../..
      #     mvn install
